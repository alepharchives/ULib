## -------------------------------------------------------------------------------
## benchmarking.cfg - configuration parameters
## -------------------------------------------------------------------------------

userver {

## ----------------------------------------------------------------------------------------------------------------------------------------
## userver - configuration parameters
## ----------------------------------------------------------------------------------------------------------------------------------------
## USE_IPV6      flag to indicate use of ipv6
## SERVER        host name or ip address for the listening socket
## PORT          port number             for the listening socket
## SOCKET_NAME   file name               for the listening socket
## ALLOWED_IP    client address IP-based access control (IPADDR[/MASK])
##
## LISTEN_BACKLOG        max number of ready to be delivered connections to accept()
## USE_TCP_OPTIMIZATION  flag indicating the use of TCP/IP options to optimize data transmission (DEFER_ACCEPT, QUICKACK)
## SET_REALTIME_PRIORITY flag indicating that the preforked processes will be scheduled under the real-time policies SCHED_FIFO
##
## PID_FILE      write pid on file indicated
## WELCOME_MSG   message of welcome to send initially to client
## RUN_AS_USER   change the current working directory to the user home dir, and downgrade security to that user account
## DOCUMENT_ROOT The directory out of which you will serve your documents
##
## LOG_FILE      locations for file log
## LOG_FILE_SZ   memory size for file log
## LOG_MSG_SIZE  limit length of print network message to LOG_MSG_SIZE chars (default 128)
##
## PLUGIN        list of plugins to load, a flexible way to add specific functionality to the server
## PLUGIN_DIR    directory of plugins to load
##
## REQ_TIMEOUT   timeout for request from client
## CGI_TIMEOUT   timeout for cgi execution
##
## MAX_KEEP_ALIVE Specifies the maximum number of requests that can be served through a Keep-Alive (Persistent) session.
##                (Value <= 0 will disable Keep-Alive)
##
## DH_FILE       dh param
## CERT_FILE     certificate of server
## KEY_FILE      private key of server
## PASSWORD      password for private key of server
## CA_FILE       locations of trusted CA certificates used in the verification
## CA_PATH       locations of trusted CA certificates used in the verification
##
## VERIFY_MODE   mode of verification (SSL_VERIFY_NONE=0, SSL_VERIFY_PEER=1, SSL_VERIFY_FAIL_IF_NO_PEER_CERT=2, SSL_VERIFY_CLIENT_ONCE=4)
## ----------------------------------------------------------------------------------------------------------------------------------------
## how to verify peer certificates. The possible values of this setting are:
##
## SSL_VERIFY_NONE                 - do not verify anything
## SSL_VERIFY_PEER                 - verify the peer certificate, if one is presented
## SSL_VERIFY_FAIL_IF_NO_PEER_CERT - require a peer certificate, fail if one is not presented
##
## SSL/TLS servers will usually set VERIFY_MODE to SSL_VERIFY_NONE.
## SSL/TLS clients will usually set VERIFY_MODE to SSL_VERIFY_FAIL_IF_NO_PEER_CERT.
## ----------------------------------------------------------------------------------------------------------------------------------------
##
## PREFORK_CHILD number of child server processes created at startup: -1 - thread approach (experimental)
##                                                                     0 - serialize, no forking
##                                                                     1 - classic, forking after accept client
##                                                                    >1 - pool of process serialize plus monitoring process
## ----------------------------------------------------------------------------------------------------------------------------------------

   PORT 443

   LISTEN_BACKLOG       1024
   USE_TCP_OPTIMIZATION yes

## RUN_AS_USER apache

   DOCUMENT_ROOT  benchmark/docroot

## LOG_FILE       benchmark/benchmarking.log
   LOG_FILE_SZ    50M
   LOG_MSG_SIZE   20

   PLUGIN         mod_http

   PLUGIN_DIR     ../../../../src/ulib/net/server/plugin/.libs

#  MAX_KEEP_ALIVE 1000

#  PREFORK_CHILD   4
#  PREFORK_CHILD  -1

   CERT_FILE     ../ulib/CA/server.crt
   KEY_FILE      ../ulib/CA/server.key
   PASSWORD      caciucco
   CA_PATH       ../ulib/CA/CApath
   CA_FILE       ../ulib/CA/cacert.pem
   VERIFY_MODE   0
}

## ------------------------------------------------------------------------------------------------------------------------------------------
## mod_http - plugin parameters
## ------------------------------------------------------------------------------------------------------------------------------------------
## ALIAS                      vector of URI redirection (request -> alias)
## REWRITE_RULE_NF            vector of URI rewrite rule applied after checks that files do not exist (regex1 -> uri1 ...)
##
## MAINTENANCE_MODE           to switch the site to a maintenance page only
##
## ENABLE_INOTIFY             enable automatic update of document root image with inotify
## TELNET_ENABLE              accept fragmentation of header request (as happen with telnet)
## CACHE_FILE_MASK            mask (DOS regexp) of pathfile that be cached in memory
## MIN_SIZE_FOR_SENDFILE      for major size it is better to use sendfile() to serve static content
##
## VIRTUAL_HOST               flag to activate practice of maintaining more than one server on one machine,
##                            as differentiated by their apparent hostname 
## DIGEST_AUTHENTICATION      flag authentication method (yes = digest, no = basic)
##
## ENABLE_CACHING_BY_PROXY_SERVERS enable caching by proxy servers (add Cache control: public directive)
##
## URI_PROTECTED_MASK         mask (DOS regexp) of URI protected from prying eyes
## URI_PROTECTED_ALLOWED_IP   list of comma separated client address for IP-based access control (IPADDR[/MASK]) for URI_PROTECTED_MASK
##
## URI_REQUEST_CERT_MASK      mask (DOS regexp) of URI where client must comunicate a certificate in the SSL connection
##
## This directive gives greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks
##
## LIMIT_REQUEST_BODY         restricts the total size of the HTTP request body sent from the client
## REQUEST_READ_TIMEOUT       set timeout for receiving requests
## ------------------------------------------------------------------------------------------------------------------------------------------

mod_http {

   CACHE_FILE_MASK *.html|*.swf
}
