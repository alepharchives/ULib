#!/bin/sh

. ../.function

## web_server.test -- Test web_server feature

start_msg web_server

rm -f web_server?.log* uploads/* \
      out/userver_tcp.out err/userver_tcp.err web_server.err \
      trace.*userver_tcp*.[0-9]* object.*userver_tcp*.[0-9]* stack.*userver_tcp*.[0-9]*

#UTRACE="0 50M 0"
#UOBJDUMP="0 100k 10"
#USIMERR="error.sim"
 export UTRACE UOBJDUMP USIMERR

if [ "$TERM" = "msys" ]; then
   export TMPDIR="c:/tmp"
fi

DIR_CMD="../../examples/userver"

if [ "$TERM" != "cygwin" ]; then
	( mkdir -p usp; cd usp; ln -sf ../../../src/ulib/plugin/usp/.libs/jsonrequest.so
	  cd ../../../src/ulib/plugin/usp/;
	  make jsonrequest.la  >/dev/null 2>&1 || exit 1;
	  make benchmarking.la >/dev/null 2>&1 || exit 1;
	  cd ../.libs;
	  ln -sf ../mod_shib/.libs/mod_shib.so;
	  ln -sf ../mod_geoip/.libs/mod_geoip.so )
fi

# function : start_test
start_test() {

#STRACE=$TRUSS
 start_prg_background userver_tcp -c $1

for i in 1 2 3 4 5; do
	$NC -w 1 127.0.0.1 80 </dev/null 2>/dev/null
	if [ $? -eq 0 ]; then
		break
	fi
	$SLEEP
done

#LS=tst_90
#LS=`ls inp/http/and`
#mkdir -p /tmp/web_server
#for i in $LS; do
# $NC -w 4 127.0.0.1 80 <inp/http/and/$i >/tmp/web_server/$i
#done

LS=`ls inp/http/close`
for i in $LS; do
	$NC -w 2 127.0.0.1 80 <inp/http/close/$i >>out/web_server.out
	if [ $? -ne 0 ]; then
		exit 1
	fi
done

touch vuoto.txt

 $NC -w 4 127.0.0.1 80 <inp/http/all.inp  >>out/web_server.out
 if [ $? -ne 0 ]; then
	exit 1
 fi
 $NC -w 2 127.0.0.1 80 <inp/http/post.inp >>out/web_server.out
 if [ $? -ne 0 ]; then
	exit 1
 fi

# test upload

rm    -rf      uploads
mkdir -p		   uploads
$CHOWN apache: uploads
chmod 777      uploads

 $CURL -s -F 'file=@vuoto.txt'                                -F "name=prova" http://127.0.0.1/cgi-bin/uploader.sh >>out/web_server.out 2>>err/web_server.err
 $CURL -s -F 'file=@inp/xml2txt/operazione.xml;type=text/xml' -F "name=prova" http://127.0.0.1/cgi-bin/uploader.sh >>out/web_server.out 2>>err/web_server.err

 kill_prg userver_tcp TERM
 if [ $? -ne 0 ]; then
	for i in 1 2 3 4 5; do
		pgrep userver_tcp >/dev/null 2>/dev/null
		if [ $? -ne 0 ]; then
			return
		fi
		$SLEEP
	done
	exit 1
 fi
}

 start_test web_server0.cfg
 start_test web_server1.cfg
 start_test web_server2.cfg
 start_test web_serverN.cfg

diff inp/xml2txt/operazione.xml uploads/operazione.xml
RESULT=$?

mv err/userver_tcp.err err/web_server.err

# Test against expected output
test_output_wc l web_server
