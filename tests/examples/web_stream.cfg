## ----------------------------------------------------------------------------------------------------------------------------------------
## userver - configuration parameters
## ----------------------------------------------------------------------------------------------------------------------------------------
## ENABLE_IPV6   flag to indicate use of ipv6
## SERVER        host name or ip address for the listening socket
## PORT          port number             for the listening socket
## SOCKET_NAME   file name               for the listening socket
## IP_ADDRESS    public ip address of host for the interface connected to the Internet (autodetected if not specified)
## ALLOWED_IP    client address IP-based access control (IPADDR[/MASK])
##
## USE_TCP_OPTIMIZATION flag indicating the use of TCP/IP options to optimize data transmission (NODELAY/CORK, DEFER_ACCEPT, QUICKACK)
##
## PID_FILE      write pid on file indicated
## WELCOME_MSG   message of welcome to send initially to client
## RUN_AS_USER   change the current working directory to the user home dir, and downgrade security to that user account
## DOCUMENT_ROOT The directory out of which you will serve your documents
##
## LOG_FILE      locations for file log
## LOG_FILE_SZ   memory size for file log
## LOG_MSG_SIZE  limit length of print network message to LOG_MSG_SIZE chars (default 128)
##
## PLUGIN        list of plugins to load, a flexible way to add specific functionality to the server
## PLUGIN_DIR    directory of plugins to load
##
## REQ_TIMEOUT   timeout for request from client
## CGI_TIMEOUT   timeout for cgi execution
##
## MAX_KEEP_ALIVE Specifies the maximum number of requests that can be served through a Keep-Alive (Persistent) session.
##                (Value <= 1 will disable Keep-Alive)
##
## CERT_FILE     certificate of server
## KEY_FILE      private key of server
## PASSWORD      password for private key of server
## CA_FILE       locations of trusted CA certificates used in the verification
## CA_PATH       locations of trusted CA certificates used in the verification
##
## VERIFY_MODE   mode of verification (SSL_VERIFY_NONE=0, SSL_VERIFY_PEER=1, SSL_VERIFY_FAIL_IF_NO_PEER_CERT=2, SSL_VERIFY_CLIENT_ONCE=4)
## ----------------------------------------------------------------------------------------------------------------------------------------
## how to verify peer certificates. The possible values of this setting are:
##
## SSL_VERIFY_NONE                 - do not verify anything
## SSL_VERIFY_PEER                 - verify the peer certificate, if one is presented
## SSL_VERIFY_FAIL_IF_NO_PEER_CERT - require a peer certificate, fail if one is not presented
##
## SSL/TLS servers will usually set VERIFY_MODE to SSL_VERIFY_NONE.
## SSL/TLS clients will usually set VERIFY_MODE to SSL_VERIFY_FAIL_IF_NO_PEER_CERT.
## ----------------------------------------------------------------------------------------------------------------------------------------
##
## PREFORK_CHILD number of child server processes created at startup ( 0 - serialize, no forking
##                                                                     1 - classic, forking after accept client)
##                                                                    >1 - pool of process serialize plus monitoring process)
## ----------------------------------------------------------------------------------------------------------------------------------------

userver {

   USE_TCP_OPTIMIZATION yes

   RUN_AS_USER apache

   REQ_TIMEOUT     5
   MAX_KEEP_ALIVE  5

   LOG_FILE    web_stream.log
   LOG_FILE_SZ 1M

   PLUGIN      "mod_stream mod_http"
   PLUGIN_DIR  ../../src/ulib/net/server/plugin/.libs

   PREFORK_CHILD 2
}

# ------------------------------------------------------------------------------------------------------------------------------------------------
# mod_stream - plugin parameters
# ------------------------------------------------------------------------------------------------------------------------------------------------
# COMMAND                      command to execute
# ENVIRONMENT  environment for command to execute
#
# URI_PATH     specifies the local part of the URL path at which you would like the content to appear (Ex. /my/video.ogv)
# METADATA     specifies the needs to have setup headers prepended for each codec stream (Ex. /my/audio.ogg)
# CONTENT_TYPE specifies the Internet media type of the stream, which will appear in the Content-Type HTTP response header
# ------------------------------------------------------------------------------------------------------------------------------------------------

mod_stream {

#  ENVIRONMENT   "UTRACE=0 5M 0"
   COMMAND       my_stream.sh

   URI_PATH      /my/stream
   METADATA      /tmp/metadata
   CONTENT_TYPE  text/plain
#  CONTENT_TYPE  "multipart/x-mixed-replace; boundary=++++++++"
}

## ------------------------------------------------------------------------------------------------------------------------------------------------
## mod_http - plugin parameters
## ------------------------------------------------------------------------------------------------------------------------------------------------

#include "mod_http.cfg"
