## ----------------------------------------------------------------------------------------------------------------------------------------
## userver - configuration parameters
## ----------------------------------------------------------------------------------------------------------------------------------------
## USE_IPV6      flag to indicate use of ipv6
## SERVER        host name or ip address for the listening socket
## PORT          port number             for the listening socket
## SOCKET_NAME   file name               for the listening socket
## IP_ADDRESS    public ip address of host for the interface connected to the Internet (autodetected if not specified)
## ALLOWED_IP    client address IP-based access control (IPADDR[/MASK])
##
## USE_TCP_OPTIMIZATION flag indicating the use of TCP/IP options to optimize data transmission (NODELAY/CORK, DEFER_ACCEPT, QUICKACK)
##
## PID_FILE      write pid on file indicated
## WELCOME_MSG   message of welcome to send initially to client
## RUN_AS_USER   change the current working directory to the user home dir, and downgrade security to that user account
## DOCUMENT_ROOT The directory out of which you will serve your documents
##
## LOG_FILE      locations for file log
## LOG_FILE_SZ   memory size for file log
## LOG_MSG_SIZE  limit length of print network message to LOG_MSG_SIZE chars (default 128)
##
## PLUGIN        list of plugins to load, a flexible way to add specific functionality to the server
## PLUGIN_DIR    directory of plugins to load
##
## REQ_TIMEOUT   timeout for request from client
## CGI_TIMEOUT   timeout for cgi execution
##
## MAX_KEEP_ALIVE Specifies the maximum number of requests that can be served through a Keep-Alive (Persistent) session.
##                (Value <= 1 will disable Keep-Alive)
##
## CERT_FILE     certificate of server
## KEY_FILE      private key of server
## PASSWORD      password for private key of server
## CA_FILE       locations of trusted CA certificates used in the verification
## CA_PATH       locations of trusted CA certificates used in the verification
##
## VERIFY_MODE   mode of verification (SSL_VERIFY_NONE=0, SSL_VERIFY_PEER=1, SSL_VERIFY_FAIL_IF_NO_PEER_CERT=2, SSL_VERIFY_CLIENT_ONCE=4)
## ----------------------------------------------------------------------------------------------------------------------------------------
## how to verify peer certificates. The possible values of this setting are:
##
## SSL_VERIFY_NONE                 - do not verify anything
## SSL_VERIFY_PEER                 - verify the peer certificate, if one is presented
## SSL_VERIFY_FAIL_IF_NO_PEER_CERT - require a peer certificate, fail if one is not presented
##
## SSL/TLS servers will usually set VERIFY_MODE to SSL_VERIFY_NONE.
## SSL/TLS clients will usually set VERIFY_MODE to SSL_VERIFY_FAIL_IF_NO_PEER_CERT.
## ----------------------------------------------------------------------------------------------------------------------------------------
##
## PREFORK_CHILD number of child server processes created at startup ( 0 - serialize, no forking
##                                                                     1 - classic, forking after accept client)
##                                                                    >1 - pool of process serialize plus monitoring process)
## ----------------------------------------------------------------------------------------------------------------------------------------

userver {

   USE_IPV6       no
## SERVER         localhost
## PORT           80
## IP_ADDRESS     10.30.1.131
## ALLOWED_IP     127.0.0.1,10.30.0.0/16

## WELCOME_MSG    "220 david.unirel.intranet ULib WEB server (Version 1.0.5) ready.\n"
## DOCUMENT_ROOT  /var/www/localhost/htdocs/ridwhan
## RUN_AS_USER    nobody

   LOG_FILE       tsa_http.log
   LOG_FILE_SZ    1M
   LOG_MSG_SIZE   -1

   PLUGIN         "mod_tsa mod_http"
   PLUGIN_DIR     ../../src/ulib/plugin/.libs

   REQ_TIMEOUT     5
   CGI_TIMEOUT    60

   MAX_KEEP_ALIVE 256 

   CERT_FILE      ../ulib/CA/server.crt
    KEY_FILE      ../ulib/CA/server.key
   PASSWORD       caciucco
   CA_PATH        ../ulib/CA/CApath
   CA_FILE        ../ulib/CA/cacert.pem
   VERIFY_MODE    1
## VERIFY_MODE    7

## PREFORK_CHILD  4
}

## ------------------------------------------------------------------------------------------------------------------------------------------
## mod_http - plugin parameters
## ------------------------------------------------------------------------------------------------------------------------------------------
## ALIAS                      vector of URI redirection (request -> alias)
## REWRITE_RULE_NF            vector of URI rewrite rule applied after checks that files do not exist (regex1 -> uri1 ...)
##
## CACHE_FILE_MASK            mask (DOS regexp) of pathfile that be cached in memory
##
## VIRTUAL_HOST               flag to activate practice of maintaining more than one server on one machine, as differentiated by their apparent hostname 
## DIGEST_AUTHENTICATION      flag authentication method (yes = digest, no = basic)
##
## URI_PROTECTED_MASK         mask (DOS regexp) of URI protected from prying eyes
## URI_PROTECTED_ALLOWED_IP   list of comma separated client address for IP-based access control (IPADDR[/MASK]) for URI_PROTECTED_MASK
## ------------------------------------------------------------------------------------------------------------------------------------------

mod_http {

   ## Allows you to tell clients about documents that used to exist in your server's namespace, but do not anymore.
   ## The client will make a request for the document at its new location
   ALIAS [
      #  /  /index.php
         ]

   CACHE_FILE_MASK       *.css|*.js|*.gif

## VIRTUAL_HOST          yes
## DIGEST_AUTHENTICATION yes
}

## -----------------------------------------------------------------------------------------------
## mod_tsa - plugin parameters
## -----------------------------------------------------------------------------------------------
## COMMAND      command to execute
## ENVIRONMENT  environment for command to execute
## -----------------------------------------------------------------------------------------------

mod_tsa {

   ## ENV[HOME]         = Base directory for op
   ## ENV[OPENSSL]      = Openssl path
   ## ENV[OPENSSL_CNF]  = Openssl configuration
   ## ENV[ENGINE]       = Openssl Engine to use
   ## ENV[PASSWORD]     = Password for key decryption
   ## ENV[TSA_CACERT]   = TSA CA chain certificate
   ## ENV[TSA_CERT]     = TSA certificate
   ## ENV[TSA_KEY]      = TSA private key
   ## ENV[FILE_LOG]     = Log file for command
   ## ENV[MSG_LOG]      = Log separator
   ## ENV[TMPDIR]       = Temporary directory
   ## ENV[DEBUG]        = Enable debugging

   ENVIRONMENT  "HOME=TSA \
                 OPENSSL=bin/openssl \
                 OPENSSL_CNF=CA/openssl.cnf \
                 TSA_CACERT=CA/cacert.pem \
                 TSA_CERT=CA/server.crt \
                 TSA_KEY=CA/server.key"

   ## ARGV[1] = TSA REQUEST
   ## ARGV[2] = TOKEN
   ## ARGV[3] = SEC
   ## ARGV[3] = POLICY

   COMMAND  TSA/TSA_command/tsa_REPLY_BIN.sh
}
