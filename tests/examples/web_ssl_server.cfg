## -------------------------------------------------------------------------------
## userver - configuration parameters
## -------------------------------------------------------------------------------

userver {

## ----------------------------------------------------------------------------------------------------------------------------------------
## USE_IPV6      flag to indicate use of ipv6
## SERVER        host name or ip address for the listening socket
## PORT          port number             for the listening socket
## SOCKET_NAME   file name               for the listening socket
## ALLOWED_IP    client address IP-based access control (IPADDR[/MASK])
##
## PID_FILE      write pid on file indicated
## WELCOME_MSG   message of welcome to send initially to client
## RUN_AS_USER   change the current working directory to the user home dir, and downgrade security to that user account
## DOCUMENT_ROOT The directory out of which you will serve your documents
##
## LOG_FILE      locations   for file log
## LOG_FILE_SZ   memory size for file log
##
## PLUGIN        list of plugins to load, a flexible way to add specific functionality to the server
## PLUGIN_DIR    directory of plugins to load
##
## REQ_TIMEOUT   timeout for request from client
## CGI_TIMEOUT   timeout for cgi execution
##
## CERT_FILE     certificate of server
## KEY_FILE      private key of server
## PASSWORD      password for private key of server
## CA_FILE       locations of trusted CA certificates used in the verification
## CA_PATH       locations of trusted CA certificates used in the verification
##
## VERIFY_MODE   mode of verification (SSL_VERIFY_NONE=0, SSL_VERIFY_PEER=1, SSL_VERIFY_FAIL_IF_NO_PEER_CERT=2, SSL_VERIFY_CLIENT_ONCE=4)
## ----------------------------------------------------------------------------------------------------------------------------------------
## how to verify peer certificates. The possible values of this setting are:
##
## SSL_VERIFY_NONE                 - do not verify anything
## SSL_VERIFY_PEER                 - verify the peer certificate, if one is presented
## SSL_VERIFY_FAIL_IF_NO_PEER_CERT - require a peer certificate, fail if one is not presented
##
## SSL/TLS servers will usually set VERIFY_MODE to  SSL_VERIFY_PEER                                      (OPTIONAL)
## SSL/TLS clients will usually set VERIFY_MODE to (SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT)   (REQUIRE)
## ----------------------------------------------------------------------------------------------------------------------------------------
##
## PREFORK_CHILD number of child server processes created at startup ( 0 - serialize, no forking
##                                                                     1 - classic, forking after accept client)
##                                                                    >1 - pool of process serialize plus monitoring process)
## ----------------------------------------------------------------------------------------------------------------------------------------

## USE_IPV6       no
## SERVER         localhost
## SERVER         10.30.1.131
## SERVER         192.168.220.102
   PORT           443
## ALLOWED_IP     127.0.0.1,10.30.0.0/16

## WELCOME_MSG    "220 david.unirel.intranet ULib WEB server (Version 1.0.5) ready.\n"
## DOCUMENT_ROOT  /var/www/localhost/htdocs/ridwhan
## RUN_AS_USER    nobody

   LOG_FILE       web_ssl_server.log
   LOG_FILE_SZ    1M

   PLUGIN         "( mod_http )"
   PLUGIN_DIR     ../../src/ulib/plugin/.libs

   REQ_TIMEOUT    60
   CGI_TIMEOUT    20

   CERT_FILE      ../ulib/CA/server.crt
    KEY_FILE      ../ulib/CA/server.key
   PASSWORD       caciucco
   CA_PATH        ../ulib/CA/CApath
   CA_FILE        ../ulib/CA/cacert.pem
   VERIFY_MODE    1
}

## ------------------------------------------------------------------------------------------------------------------------------------------
## mod_http - plugin parameters
## ------------------------------------------------------------------------------------------------------------------------------------------
## ALIAS                 vector of URI redirection (request -> alias)
##
## VIRTUAL_HOST          flag to activate practice of maintaining more than one server on one machine, as differentiated by their apparent hostname 
## DIGEST_AUTHENTICATION flag authentication method (yes = digest, no = basic)
## ------------------------------------------------------------------------------------------------------------------------------------------

mod_http {

   ## ALIAS: Allows you to tell clients about documents that used to exist in your server's namespace, but do not anymore.
   ##       The client will make a request for the document at its new location
   [
   /  /index.html
   ]

## VIRTUAL_HOST          yes
## DIGEST_AUTHENTICATION yes
}
