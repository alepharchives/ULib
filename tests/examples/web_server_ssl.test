#!/bin/sh

. ../.function

## web_server_ssl.test -- Test web_server feature

start_msg web_server_ssl

mkdir -p ../db
rm -f ../db/session.ssl* /tmp/ssl_session.txt \
		/var/log/httpd/access_log \
	   web_server_ssl?.log* uploads/* \
      out/userver_ssl.out err/userver_ssl.err web_server_ssl.err \
      trace.*userver_ssl*.[0-9]* object.*userver_ssl*.[0-9]* stack.*userver_ssl*.[0-9]* mempool.*userver_ssl*.[0-9]*

#UTRACE="0 50M 0"
#UOBJDUMP="0 10M 5000"
#USIMERR="error.sim"
 export UTRACE UOBJDUMP USIMERR

if [ "$TERM" = "msys" ]; then
   export TMPDIR="c:/tmp"
fi

DIR_CMD="../../examples/userver"

compile_usp

CAPATH="../ulib/CA/CApath"
CACERT="../ulib/CA/username.crt"
USER_KEY="../ulib/CA/username.key"
LCMD="$OPENSSL s_client -no_ssl2 -quiet -cert $CACERT -key $USER_KEY -pass pass:caciucco -CApath $CAPATH -verify 0 -connect localhost:443"

# function : start_test
start_test() {

touch vuoto.txt
cat << EOF >tmp/c
c
c
EOF

#STRACE=$TRUSS
 start_prg_background userver_ssl -c $1

for i in 1 2 3 4 5; do
	$NC -w 1 127.0.0.1 443 </dev/null 2>/dev/null
	if [ $? -eq 0 ]; then
		break
	fi
	$SLEEP
done

#LS=tst_90
#LS=`ls inp/http/and`
#mkdir -p /tmp/web_server
#for i in $LS
#do
# TIMEOUT 2 $LCMD <inp/http/and/$i >/tmp/web_server/$i
#done

#TIMEOUT 10 $LCMD <inp/http/all5.inp  >>out/web_server_ssl.out 2>>err/web_server_ssl.err
#return

LS=`ls inp/http/close`
for i in $LS
do
	TIMEOUT 2 $LCMD <inp/http/close/$i >>out/web_server_ssl.out 2>>err/web_server_ssl.err
   EXIT_VALUE=$?
   if [ $EXIT_VALUE -ne 0 ] && [ $EXIT_VALUE -ne 124 ]; then
  	  exit 1
   fi
done

 TIMEOUT 10 $LCMD <inp/http/all.inp  >>out/web_server_ssl.out 2>>err/web_server_ssl.err
 EXIT_VALUE=$?
 if [ $EXIT_VALUE -ne 0 ] && [ $EXIT_VALUE -ne 124 ]; then
	exit 1
 fi
 TIMEOUT 10 $LCMD <inp/http/all1.inp >>out/web_server_ssl.out 2>>err/web_server_ssl.err
 EXIT_VALUE=$?
 if [ $EXIT_VALUE -ne 0 ] && [ $EXIT_VALUE -ne 124 ]; then
	exit 1
 fi
 TIMEOUT 4  $LCMD <inp/http/post.inp >>out/web_server_ssl.out 2>>err/web_server_ssl.err
 EXIT_VALUE=$?
 if [ $EXIT_VALUE -ne 0 ] && [ $EXIT_VALUE -ne 124 ]; then
	exit 1
 fi

# test upload

rm    -rf      uploads
mkdir -p		   uploads
$CHOWN apache: uploads
chmod 777      uploads

TIMEOUT 5 $CURL -s -F 'file=@vuoto.txt'                                -F "name=prova" -k https://127.0.0.1:443/cgi-bin/uploader.sh >>out/web_server_ssl.out 2>>err/web_server_ssl.err
TIMEOUT 5 $CURL -s -F 'file=@inp/xml2txt/operazione.xml;type=text/xml' -F "name=prova" -k https://127.0.0.1:443/cgi-bin/uploader.sh >>out/web_server_ssl.out 2>>err/web_server_ssl.err

 kill_prg userver_ssl TERM
 if [ $? -ne 0 ]; then
	for i in 1 2 3 4 5; do
		pgrep userver_ssl >/dev/null 2>/dev/null
		if [ $? -ne 0 ]; then
			return
		fi
		$SLEEP
	done
	exit 1
 fi
}

 start_test web_server_ssl0.cfg

#start_test web_server_ssl1.cfg # NB: openssl s_client close the connection in pipeline...

 start_test web_server_ssl2.cfg
 start_test web_server_sslN.cfg

diff inp/xml2txt/operazione.xml uploads/operazione.xml
RESULT=$?

mv err/userver_ssl.err err/web_server_ssl.err

# Test against expected output
test_output_wc l web_server_ssl
