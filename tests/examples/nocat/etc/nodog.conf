## -------------------------------------------------------------------------------
## configuration parameters
## -------------------------------------------------------------------------------

userver {

## ----------------------------------------------------------------------------------------------------------------------------------------
## userver - configuration parameters
## ----------------------------------------------------------------------------------------------------------------------------------------
## ENABLE_IPV6   flag to indicate use of ipv6
## SERVER        host name or ip address for the listening socket
## PORT          port number             for the listening socket
## SOCKET_NAME   file name               for the listening socket
## IP_ADDRESS    public ip address of host for the interface connected to the Internet (autodetected if not specified)
## ALLOWED_IP    client address IP-based access control (IPADDR[/MASK])
##
## LISTEN_BACKLOG        max number of ready to be delivered connections to accept()
## USE_TCP_OPTIMIZATION  flag indicating the use of TCP/IP options to optimize data transmission (NODELAY/CORK, DEFER_ACCEPT, QUICKACK)
## SET_REALTIME_PRIORITY flag indicating that the preforked processes will be scheduled under the real-time policies SCHED_FIFO
##
## PID_FILE      write pid on file indicated
## WELCOME_MSG   message of welcome to send initially to client
## RUN_AS_USER   change the current working directory to the user home dir, and downgrade security to that user account
## DOCUMENT_ROOT The directory out of which you will serve your documents
##
## LOG_FILE      locations for file log
## LOG_FILE_SZ   memory size for file log
## LOG_MSG_SIZE  limit length of print network message to LOG_MSG_SIZE chars (default 128) (-1 => only HTTP header)
##
## PLUGIN        list of plugins to load, a flexible way to add specific functionality to the server
## PLUGIN_DIR    directory of plugins to load
##
## REQ_TIMEOUT   timeout for request from client
## CGI_TIMEOUT   timeout for cgi execution
##
## MAX_KEEP_ALIVE Specifies the maximum number of requests that can be served through a Keep-Alive (Persistent) session.
##                (Value <= 1 will disable Keep-Alive)
##
## CERT_FILE     certificate of server
## KEY_FILE      private key of server
## PASSWORD      password for private key of server
## CA_FILE       locations of trusted CA certificates used in the verification
## CA_PATH       locations of trusted CA certificates used in the verification
##
## VERIFY_MODE   mode of verification (SSL_VERIFY_NONE=0, SSL_VERIFY_PEER=1, SSL_VERIFY_FAIL_IF_NO_PEER_CERT=2, SSL_VERIFY_CLIENT_ONCE=4)
## ----------------------------------------------------------------------------------------------------------------------------------------
## how to verify peer certificates. The possible values of this setting are:
##
## SSL_VERIFY_NONE                 - do not verify anything
## SSL_VERIFY_PEER                 - verify the peer certificate, if one is presented
## SSL_VERIFY_FAIL_IF_NO_PEER_CERT - require a peer certificate, fail if one is not presented
##
## SSL/TLS servers will usually set VERIFY_MODE to SSL_VERIFY_NONE.
## SSL/TLS clients will usually set VERIFY_MODE to SSL_VERIFY_FAIL_IF_NO_PEER_CERT.
## ----------------------------------------------------------------------------------------------------------------------------------------
##
## PREFORK_CHILD number of child server processes created at startup ( 0 - serialize, no forking
##                                                                     1 - classic, forking after accept client)
##                                                                    >1 - pool of process serialize plus monitoring process)
## ----------------------------------------------------------------------------------------------------------------------------------------

## ENABLE_IPV6    no
## SERVER         localhost
## PORT           5280
## IP_ADDRESS     10.30.1.131
## ALLOWED_IP     127.0.0.1,10.30.0.0/16

## LISTEN_BACKLOG        1024
   USE_TCP_OPTIMIZATION  yes
## SET_REALTIME_PRIORITY yes

   DOCUMENT_ROOT  /usr/lib/nodog
## RUN_AS_USER    nobody
	PID_FILE       /tmp/nodog.pid

## LOG_FILE       syslog
   LOG_FILE       /tmp/nodog.log
   LOG_FILE_SZ    1M
   LOG_MSG_SIZE   -1

   PLUGIN         "mod_nocat mod_http"
## PLUGIN_DIR     /usr/libexec/ulib

## ------------------------------------------------------------------------------------------------------------------------------------------
## Max Keep-Alive Requests
## ------------------------------------------------------------------------------------------------------------------------------------------
## Description: Specifies the maximum number of requests that can be served through a Keep-Alive (Persistent) session.
##              Connection will be closed once this limit is reached.
## Syntax: Integer number
## Tips: [Performance] Set it to a resonable high value (256). Value <= 1 will disable Keep-Alive.
## ------------------------------------------------------------------------------------------------------------------------------------------

## MAX_KEEP_ALIVE 256

## ------------------------------------------------------------------------------------------------------------------------------------------
## Keep-Alive Timeout
## ------------------------------------------------------------------------------------------------------------------------------------------
## Description: Specifies the maximum idle time between requests from a Keep-Alive connection. If no new request is received during
##              this period of time, the connection will be closed.
## Syntax:      Integer number
## Tips: [Security & Performance] We recommend you to set the value just long enough to handle all requests for a single page view.
##       It is unnecessary to keep connection alive for an extended period of time. A smaller value can reduce idle connections, increase
##       capacity to service more users and guard against DoS attacks. 2-5 seconds is a reasonable range for most applications.
## ------------------------------------------------------------------------------------------------------------------------------------------

   REQ_TIMEOUT     5
   CGI_TIMEOUT    60

## CERT_FILE      ../ulib/CA/server.crt
##  KEY_FILE      ../ulib/CA/server.key
## PASSWORD       stefano
## CA_PATH        ../ulib/CA/CApath
## CA_FILE        ../ulib/CA/cacert.pem
## VERIFY_MODE    1
## VERIFY_MODE    7

## -----------------------------------------------------------------------
## NB: MUST BE IN THIS WAY... (otherwise cannot share hash table of peers)
## -----------------------------------------------------------------------
   PREFORK_CHILD 0
## -----------------------------------------------------------------------
}

## --------------------------------------------------------------------------------------------------------------------
## mod_nocat - plugin parameters
## --------------------------------------------------------------------------------------------------------------------
## FW_ENV					 environment for shell script to execute
## FW_CMD                shell script to manage the firewall
## INTERNAL_DEVICE_LABEL radio tag to be used from portal
##
## DECRYPT_CMD           PGP command stuff
## DECRYPT_KEY           DES3 password stuff
##
## LOGIN_TIMEOUT         Number of seconds after a client last login/renewal to terminate their connection
## CHECK_BY_ARPING       metodo aggiuntivo per verificare la presenza di un peer nella tabella ARP (yes -> abilitato)
## CHECK_EXPIRE_INTERVAL Number of seconds to check if some client has terminate their connection
## --------------------------------------------------------------------------------------------------------------------

mod_nocat {

   # shell script to manage the firewall

	FW_ENV "ExternalDevice=eth0 \
			  InternalDevice=eth1 \
			  LocalNetwork=192.168.253.0/24 \                                                                                             
			 #GatewayPort=80 \
			 #AuthServiceAddr=http://172.16.1.254 \
			  AuthServiceAddr=http://wifi-aaa.comune.fi.it \
			  www.unifi.it=150.217.6.125 \
			  www.055055.it=195.110.124.133 \
			  telematica_regione_toscana=159.213.0.0/16 \
		    'AllowedWebHosts=$www_unifi_it $www_055055_it $telematica_regione_toscana'"

   FW_CMD firewall/nodog.fw

	# radio tag to be used by portal
   INTERNAL_DEVICE_LABEL "radio1 radio2"

   # PGP command stuff
#  DECRYPT_CMD "/usr/bin/gpg --decrypt --homedir=/usr/share/nocat/pgp --batch --decrypt --no-tty --status-file /tmp/gpg.status -o -"

   # DES3 password stuff
   DECRYPT_KEY PASSWORD

   # Number of seconds after a client last login/renewal to terminate their connection
   # Probably do not want to set this to less than 60 or a lot of bandwidth is likely to get consumed by the client renewal attempts
#  LOGIN_TIMEOUT 86400 # one notification per day

   # metodo aggiuntivo per verificare la presenza di un peer nella tabella ARP (yes -> abilitato)
   CHECK_BY_ARPING yes

   # Number of seconds to check if some client has terminate their connection
   CHECK_EXPIRE_INTERVAL 360
}

## ------------------------------------------------------------------------------------------------------------------------------------------------
## mod_http - plugin parameters
## ------------------------------------------------------------------------------------------------------------------------------------------------
## ALIAS                      vector of URI redirection (request -> alias)
##	REWRITE_RULE_NF				vector of URI rewrite rule applied after checks that files do not exist (regex1 -> uri1 ...)
## VIRTUAL_HOST               flag to activate practice of maintaining more than one server on one machine, as differentiated by their apparent hostname 
## ENABLE_INOTIFY             enable automatic update of document root image with inotify
## CACHE_FILE_MASK				mask (DOS regexp) of pathfile that be cached in memory
## DIGEST_AUTHENTICATION      flag authentication method (yes = digest, no = basic)
## URI_PROTECTED_MASK         mask (DOS regexp) of URI protected from prying eyes
## URI_PROTECTED_ALLOWED_IP   list of comma separated client address for IP-based access control (IPADDR[/MASK]) for URI_PROTECTED_MASK
## ------------------------------------------------------------------------------------------------------------------------------------------

mod_http {

   ## Allows you to tell clients about documents that used to exist in your server's namespace, but do not anymore.
   ## The client will make a request for the document at its new location

  	ALIAS	[
  			/			  /test
  			/printenv  /cgi-bin/printenv.sh
# 			/login	  /cgi-bin/index.sh
  			]

	## vector of URI rewrite rule applied after checks that files do not exist (regex1 -> uri1 ...)

##	REWRITE_RULE_NF [
##						 ^/.*\.[A-Za-z0-9]+.*?$	$0
##						 ^/(.*?)(\?|$)(.*)		/sapphire/main.php?url=$1&$3
##						 ]

## VIRTUAL_HOST           yes
## ENABLE_INOTIFY         yes
   DIGEST_AUTHENTICATION  yes

   URI_PROTECTED_MASK       /cgi-bin/*
## URI_PROTECTED_ALLOWED_IP 127.0.0.1,10.30.0.0/16
}
