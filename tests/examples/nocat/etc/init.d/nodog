#!/bin/sh /etc/rc.common
#
# lg's changelog:
#
#	2012/10/08: stop(): SIGTERM first, SIGKILL otherwise
#
#	2012/10/05: stop file, to stop waiting
#	2012/10/05: _pgrep() skip me update
#
#	2012/10/04: wait for public ip and use it as key, if undefined
#	2012/10/04: strip()
#

START=90
STOP=39

 export UTRACE="-0 10M 0"
#export UOBJDUMP="0 100k 10"
#export USIMERR="error.sim"
 export DIR_LOG_GZ=/tmp

descr='nodog the brilliant'
cmdline='/usr/sbin/userver_tcp -c /etc/nodog.conf'
#cmdline='strace -t -f -s 100 /usr/sbin/userver_tcp -c /etc/nodog.conf'
pid_file=/tmp/nodog.pid
out_file=/tmp/nodog.out
err_file=/tmp/nodog.err
stop_file=/tmp/nodog.stop

public_iface=tun0
portal_file=/etc/nodog.portal
key_file=/etc/nodog.key
conf_file_portal=/tmp/nodog.conf.portal


## you should't need to put your beloved hands below
#

_pgrep() { local pids=`{ ps -efw || ps -w ; } 2> /dev/null | awk '
	### skip me ###
	NR == 1 { pid=($1 == "PID" ? 1 : 2) ; next }
	match($0, "### skip me ###") { next }
	match($0, "'"$*"'") { print $pid }'` ; test "$pids" && echo $pids ; }

log() { logger -st nodog -- $* ; }
strip() { echo -n "`$* 2> /dev/null`" ; }

start() { {
	local pids=`_pgrep "$cmdline"` ; test "$pids" && {
		log "$descr is ALREADY running ($pids)." ; return ; }
	
	log starting
	
	rm -f $stop_file

	## let's wait for date
	#
	until test `date '+%Y'` -gt 1970
		do test -f $stop_file && return
		log 'waiting for date' ; sleep 3 ; done
	
	## let's wait for public ip ...
	#
	local public_ip ; until public_ip=`ifconfig $public_iface 2> /dev/null |
		awk '/inet addr:/ { sub("inet addr:", "") ; print $1 }'` &&
		test $public_ip
			do test -f $stop_file && return
			log "waiting for public ip ($public_iface)" ; sleep 3 ; done
	
	## ... and use it as key, if undefined
	#
	test ! -f $key_file -o "`strip cat $key_file`" = undefined &&
		echo $public_ip > $key_file
	
	## get conf file from auth portal ...
	#
	/usr/sbin/uclient -c /etc/uclient.conf \
		"http://`strip cat $portal_file`/get_config?ap=`strip uname -n`&key=`strip cat $key_file`" > \
			$conf_file_portal

	## ... and wait our beloved conf file
	#
	until test -s $conf_file_portal
		do test -f $stop_file && return
		log 'waiting for our beloved conf file' ; sleep 3 ; done
	
	$cmdline >> $out_file 2>> $err_file &
	
	sleep 3 ; pids=`_pgrep "$cmdline"` ; test "$pids" &&
		log "started ($pids)." ||
		log 'seems not to run ...'
} & }

stop() {
	## are we still waiting ???
	#
	date > $stop_file
	
	local pids=`_pgrep "$cmdline"` ; test "$pids" || {
		log "$descr is NOT running." ; return 1 ; }
		
	log "stopping ($pids)"

	kill -TERM $pids   ### SIGTERM first, ...

	sleep 3 ; pids=`_pgrep "$cmdline"` ; test "$pids" && {
		log "$descr is STILL running ($pids), sending SIGKILL"
		kill -KILL $pids ; }   ### ... SIGKILL otherwise

	log 'done.'
}

restart() {
	stop ; sleep 3 ; start ; }
